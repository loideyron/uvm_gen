`ifndef __{:UPPERNAME:}_SEQUENCER_SVH_
`define __{:UPPERNAME:}_SEQUENCER_SVH_

class {:NAME:}_sequencer extends uvm_sequencer #({:TRANSACTION:});
    /* == Configuration Handle == */
    {:NAME:}_config m_cfg;
    
    /* == Component Fields == */

    `uvm_component_utils_begin({:NAME:}_sequencer)
        `uvm_field_object(m_cfg, UVM_ALL_ON)
    `uvm_component_utils_end

    function new(string name, uvm_component parent);
        super.new(name, parent);
    endfunction: new
    
    /* == Phases == */
    extern virtual function void    build_phase(uvm_phase phase);
endclass: {:NAME:}_sequencer 

/* == Implementation == */

function void {:NAME:}_sequencer::build_phase(uvm_phase phase);
    super.build_phase(phase);
    if (m_cfg == null) begin
        if (!uvm_config_db #({:NAME:}_config)::get(this, "", "m_cfg", m_cfg)) begin
            `uvm_fatal(get_type_name(), "Missing configuration object!")
        end
    end
endfunction: build_phase

`endif // __{:UPPERNAME:}_SEQUENCER_SVH_
